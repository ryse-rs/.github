name: Bug Report
description: File a bug report following our methodology
title: "[bug] ..."
labels: ["bug"]
projects: ["ryse-rs/2"]
body:
  - type: markdown
    attributes:
      value: |
        ### Thanks for taking the time to fill out this bug report! üêû

        > [!IMPORTANT]  
        > Please fill this form with care. Ready to process reports are prioritized.

        > [!TIP]
        > If you have any questions or need guidance, feel free to add related labels and ping a maintainer

        - [ ] Once you consider this issue ready to be put in the BACKLOG, set its status to "PROCESS" and wait for the status to be updated to `BACKLOG` before you start the implementation.
        
        <details>
        <summary>
          
        ## CONTRIBUTOR RULES - To the attention of the assignee

        </summary>

        > ‚ùó _Ignore the following if you are not going to fix this yourself._ ‚ùó
        ### ùüè - If you want to fix this yourself
        - [ ] Self-assign the issue
        - [ ] Propose a solution in the issue description / comments.
        - [ ] Set the appropriate _status_: BACKLOG (if ready) or CLARIFY (if still questions) or ACTIVE (if you're working on the implementation)
        - [ ] Create a branch from the GitHub development panel and immediately create a Pull Request from that branch.
        ### ùüê - Implementation rules
        - [ ] To write down your design / implementation choices. What worked, what did not or would not, why you chose this over that.
        - [ ] To implement extensive unit and/or integration tests to newly added code and to secure the root of the current issue. Or justify why they are not needed in the comments
        - [ ] To write required documentation to newly added code
        ### ùüë - Once done working on the implementation
        - [ ] Rebase main in your branch (if needed) and set it as _read for review_.
        
        </details>
  - type: textarea
    id: what-happened
    attributes:
      label: What happened?
      description: A clear and concise description of what you're experiencing.
    validations:
      required: true
  - type: textarea
    id: expected-behavior
    attributes:
      label: Expected behavior
      description: A clear and concise description of what you expected to happen.
    validations:
      required: true
  - type: input
    id: context
    attributes:
      label: Environment
      description: Please provide any relevant information about your environment (e.g. browser, OS, versions etc.).
    validations:
      required: true
  - type: textarea
    id: logs
    attributes:
      label: Relevant log output
      description: Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.
      render: shell

# SCORING SYSTEM, COMMON TO ALL TEMPLATES
  - type: markdown
    attributes:
      value: |
        ## PRIORIZATION RULES - SCORING SYSTEM
        > [!NOTE]
        > __Priority Formula__ ‚ûß `impact * effort * complexity`
        > __Contribution Formula__ ‚ûß `impact * 0.5 * complexity * (actually merged) effort`
        > Effort being computed this way: `max(additions, deletions)`
  - type: dropdown
    id: impact
    attributes:
      label: Impact
      description: How many users are affected and how severe is the impact? `average(reach, impact)`
      options:
        - I-1. Negligible impact | Affects really few users
        - I-2. Affects a specific part of the application, but not critical | Affects a small number of users
        - I-3. Affects a core part of the application | Affects a large number of users
        - I-4. Nothing works | Every user is affected
    validations:
      required: true
  - type: dropdown
    id: effort
    attributes:
      label: Effort
      description: Select the estimated number of lines of code `max(additions, deletions)`. Do not take complexity into account.
      options:
        - "E-1. -200 LoC"
        - "E-2. -750 LoC"
        - "E-3. -1k5 LoC"
        - "E-4. +1k5 LoC"
    validations:
      required: true
  - type: dropdown
    id: complexity
    attributes:
      label: Complexity
      description: How complex do you think the problem resolution will be? Consider factors such as algorithmic, brainfuck, and uncertainty. Do not take lines of code into account
      options:
        - C-1. Easy. Use of brain cells is mostly null.
        - C-2. Manageable. Will require hours of research / experimentation.
        - C-3. Hard. Will require days of research / experimentation, __prior to implementation__.
        - C-4. Black Magic level. May require weeks of research / experimentation, __prior to implementation__. May even be unsolvable.
    validations:
      required: true

