name: Enhancement Request
description: Thank you for contributing to this project! Your efforts are greatly appreciated. üôèüèª
title: "[enhance] "
labels: ["enhancement"]
projects: ["ryse-rs/2"]
body:
  - type: markdown
    attributes:
      value: |
        > [!IMPORTANT]  
        > Please make sure you made yourself aware of our [CONTRIBUTING rules](https://github.com/ryse-rs/.github/blob/main/CONTRIBUTING.md) and our [GOVERNANCE processes and vision](https://github.com/ryse-rs/.github/blob/main/GOVERNANCE.md).
        > Please fill this form with care. Ready to process requests are prioritized.
        > If you have any questions or need guidance, feel free to add related labels and ping a maintainer

        - [ ] Once you consider this issue ready to be processed, set its status to `PROCESS` and wait for the status to be updated to `BACKLOG` before you start the implementation.
        - [ ] I'd like to implement this myself.
        
        <details>
        <summary>CONTRIBUTOR RULES - To the attention of the assignee</summary>

        > ‚ùó _Ignore the following if you are not going to implement this enhancement yourself._ ‚ùó
        ##### ùüè - If you want to implement this enhancement yourself
          - [ ] Self-assign the issue
          - [ ] Propose a solution in the issue description / comments.
          - [ ] Set the appropriate _status_: `BACKLOG` (if ready) or `REFINE` (if not clear) or `ACTIVE` (if actually working on the implementation)
          - [ ] Create a branch from the GitHub development panel and start working on it.
        ##### ùüê - Implementation rules
          - [ ] Have your design / implementation choices been written down in comments? What worked, what did not or would not, why you chose this over that.
          - [ ] Have you implemented unit and/or integration tests? Or justify why they are not needed in the comments.
          - [ ] Have you written documentation? Make sure anyone else working over your code can understand it.
          - [ ] Make sure to create a new issue for any future __expected__ improvement and reference this one in the new issue description.
        ##### ùüë - Once done working on the implementation
          - [ ] Create a Pull Request from your branch.
          - [ ] Set the _status_ of the issue to `REVIEW`.
          - [ ] Request the review from a maintainer. Once reviewed, rebase main in your branch (if needed).

        *status*es: [ NEW REFINE REOPENED PROCESS BACKLOG ACTIVE TEST REVIEW CHANGES REBASE DONE CANCELLED ]

        </details>

  - type: input
    id: current-situation
    attributes:
      label: Describe the current situation.
      description: Quickly define the current context, to help understand your proposal.
      placeholder: Example. Right now, `.env` does not set environment variables, the file is parsed as-is by the `serde-toml` crate dependency.
    validations:
      required: true
  - type: input
    id: new-situation
    attributes:
      label: Describe the new situation.
      placeholder: One sentence. Your proposal. What needs are you trying to fulfill?
    validations:
      required: true
  - type: textarea
    id: why
    attributes:
      label: Why should we do that?
      description:  What are the benefits?
  - type: textarea
    id: implementation
    attributes:
      label: How can we achieve this?
      description: Feel free to provide implementation details. This will speed up the process.

# SCORING SYSTEM, COMMON TO ALL TEMPLATES
  - type: markdown
    attributes:
      value: |
        #### PRIORIZATION RULES - SCORING SYSTEM
        > [!NOTE]
        > __Priority Formula__ ‚ûß `impact * effort * complexity`
        > __Contribution Formula__ ‚ûß `impact * 0.5 * complexity * (actually merged) effort`
        > Effort being computed this way: `max(additions, deletions)`

        > [!IMPORTANT]
        > **Impact** - *How many users would benefit from this enhancement and how big would the impact be? `average(reach, impact)`*
        > I1. Negligible impact | Benefits really few users
        > I2. Interesting enhancement | Benefits a fair proportion of users
        > I3. Non-blocking but essential enhancement | Every user will benefit from having this enhancement.
        > I4. This enhancement is a prerequisite for other essential enhancements | Would have no user without this enhancement.
        >
        > **COMPLEXITY** - *How complex do you think the problem resolution will be? Consider factors such as algorithmic, brainfuck, novelty, experimentation and uncertainty. Do not take lines of code into account*
        > C1. Easy. Use of brain cells is mostly null.
        > C2. Manageable. Will require hours of research / experimentation.
        > C3. Hard. Will require days of research / experimentation, __prior to implementation__.
        > C4. Black Magic level. May require weeks of research / experimentation, __prior to implementation__. May even be unsolvable.
        >
        > **EFFORT** - *Select the estimated number of lines of code `max(additions, deletions)`. Do not take complexity into account.*
        > E1. < 200 LoC | E2. < 750 LoC | E3. < 1k5 LoC | E4. >= 1k5 LoC
  - type: dropdown
    id: impact
    attributes:
      label: Impact
      options:
        - I1
        - I2
        - I3
        - I4
    validations:
      required: true
  - type: dropdown
    id: complexity
    attributes:
      label: Complexity
      options:
        - C1
        - C2
        - C3
        - C4
    validations:
      required: true
  - type: dropdown
    id: effort
    attributes:
      label: Effort
      options:
        - E1
        - E2
        - E3
        - E4
    validations:
      required: true
