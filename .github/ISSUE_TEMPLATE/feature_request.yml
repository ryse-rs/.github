name: Feature Request
description: Propose a new feature following our methodology
title: "[feat] ..."
labels: ["feature"]
projects: ["ryse-rs/2"]
body:
  - type: markdown
    attributes:
      value: |      
        ### Thanks for your contribution to enhancing this project. Your efforts are greatly appreciated. üôèüèª
        > [!IMPORTANT]  
        > Please fill this form with care. Ready to process requests are prioritized.

        > [!TIP]
        > If you have any questions or need guidance, feel free to add related labels and ping a maintainer

        - [ ] Once you consider this issue ready to be put in the BACKLOG, set its status to "PROCESS" and wait for the status to be updated to `BACKLOG` before you start the implementation.
        
        <details>
        <summary>

        ## CONTRIBUTOR RULES - To the attention of the assignee

        </summary>

        > ‚ùó _Ignore the following if you are not going to implement this feature yourself._ ‚ùó
        ### ùüè - If you want to implement this feature yourself
        - [ ] Self-assign the issue
        - [ ] Propose a solution in the issue description / comments.
        - [ ] Set the appropriate _status_: BACKLOG (if ready) or CLARIFY (if still questions) or ACTIVE (if you're working on the implementation)
        - [ ] Create a branch (from the GitHub development panel on the right) and immediately create a Pull Request from that branch.
        ### ùüê - Implementation rules
        - [ ] Have your design / implementation choices been written down in comments? What worked, what did not or would not, why you chose this over that.
        - [ ] Have you implemented unit and/or integration tests? Or justify why they are not needed in the comments.
        - [ ] Have you written documentation? Make sure anyone else working over your code can understand it.
        - [ ] Make sure to create a new issue for any future __expected__ improvment and reference this one in the new issue description.
        ### ùüë - Once done working on the implementation
        - [ ] Rebase main in your branch (if needed) and set it as _read for review_.

        </details>
  - type: markdown
    attributes:
      value: |
        # FEATURE REQUEST RULES
  - type: input
    id: target
    attributes:
      label: Who does this feature target? / Who would directly benefit from this feature?
      description: Please provide a qualified answer. `users` is not a qualified answer.
      placeholder: The role - WHO
    validations:
      required: true
  - type: textarea
    id: added-value
    attributes:
      label: Which target audience needs does this feature address? What is the expected added-value to the product?
      description: This could include features, functionality, performance improvements, or any other outcomes that will directly impact their experience with the product.
      placeholder: The motivation - WHY
    validations:
      required: true
  - type: textarea
    id: information
    attributes:
      label: Feel free to provide any additional information that could help us understand the context of this feature request.
  - type: textarea
    id: need
    attributes:
      label: Please set up a complete task list.
      description: The need - WHAT. Note this list is expected to be regularly updated.
      value: |
        - [ ] ...
    validations:
      required: true
  - type: textarea
    id: implementation
    attributes:
      label: Feel free to provide your ideal implementation details. This will speed up the process.
      placeholder: Structure content, Traits, patterns, relations between entities, etc. 

# SCORING SYSTEM, COMMON TO ALL TEMPLATES
  - type: markdown
    attributes:
      value: |
        ## PRIORIZATION RULES - SCORING SYSTEM
        > [!NOTE]
        > __Priority Formula__ ‚ûß `impact * effort * complexity`
        > __Contribution Formula__ ‚ûß `impact * 0.5 * complexity * (actually merged) effort`
        > Effort being computed this way: `max(additions, deletions)`
  - type: dropdown
    id: impact
    attributes:
      label: Impact
      description: How many users would benefit from this feature and how big would the impact be? `average(reach, impact)`
      options:
        - I-1. Negligible impact | Benefits really few users
        - I-2. Interesting feature | Benefits a fair proportion of users
        - I-3. Non-blocking but essential feature | Every user will benefit from having this feature.
        - I-4. This feature is a prerequisite for other essential features | Would have no user without this feature.
    validations:
      required: true
  - type: dropdown
    id: effort
    attributes:
      label: Effort
      description: Select the estimated number of lines of code `max(additions, deletions)`. Do not take complexity into account.
      options:
        - "E-1. -200 LoC"
        - "E-2. -750 LoC"
        - "E-3. -1k5 LoC"
        - "E-4. +1k5 LoC"
    validations:
      required: true
  - type: dropdown
    id: complexity
    attributes:
      label: Complexity
      description: How complex do you think the problem resolution will be? Consider factors such as algorithmic, brainfuck, and uncertainty. Do not take lines of code into account
      options:
        - C-1. Easy. Use of brain cells is mostly null.
        - C-2. Manageable. Will require hours of research / experimentation.
        - C-3. Hard. Will require days of research / experimentation, __prior to implementation__.
        - C-4. Black Magic level. May require weeks of research / experimentation, __prior to implementation__. May even be unsolvable.
    validations:
      required: true
