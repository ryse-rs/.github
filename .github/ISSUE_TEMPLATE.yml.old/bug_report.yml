name: Bug Report
description: Thank you for taking the time to fill out this bug report! üêû
title: "[bug] "
labels: ["bug"]
projects: ["ryse-rs/2"]
body:
  - type: markdown
    attributes:
      value: |
        > [!IMPORTANT]  
        > Please make sure you made yourself aware of our [CONTRIBUTING rules](https://github.com/ryse-rs/.github/blob/main/CONTRIBUTING.md) and our [GOVERNANCE processes and vision](https://github.com/ryse-rs/.github/blob/main/GOVERNANCE.md).
        > Please fill this form with care. Ready to process reports are prioritized.
        > If you have any questions or need guidance, feel free to add related labels and ping a maintainer

        - [ ] Once you consider this issue ready to be processed, set its _status_ to `PROCESS` and wait for the status to be updated to `BACKLOG` before you start the implementation.
        - [ ] I'd like to fix this myself.

        <details>
        <summary>CONTRIBUTOR RULES - To the attention of the assignee</summary>

        > ‚ùó _Ignore the following if you are not going to fix this yourself._ ‚ùó
        ### ùüè - If you want to fix this yourself
        - [ ] Self-assign the issue
        - [ ] Propose a solution in the issue description / comments.
        - [ ] Set the appropriate _status_: `BACKLOG` or `ACTIVE` (if actually working on the implementation)
        - [ ] Create a branch from the GitHub development panel and start working on it.
        ### 2 - Implementation rules
        - [ ] To write down your design / implementation choices. What worked, what did not or would not, why you chose this over that.
        - [ ] To implement extensive unit and/or integration tests to newly added code and to secure the root of the current issue. Or justify why they are not needed in the comments
        - [ ] To write required documentation to newly added code
        ### 3 - Once done working on the implementation
        - [ ] Create a Pull Request from your branch.
        - [ ] Set the _status_ of the issue to `REVIEW`.
        - [ ] Request the review from a maintainer. Once reviewed, rebase main in your branch (if needed).

        *status*es: [ NEW REOPENED PROCESS BACKLOG ACTIVE TEST REVIEW CHANGES REBASE DONE CANCELLED ]

        </details>
  
  - type: textarea
    id: current-behavior
    attributes:
      label: Current behavior
      description: A clear and concise description of what you're experiencing.
    validations:
      required: true
  - type: textarea
    id: expected-behavior
    attributes:
      label: Expected behavior
      description: A clear and concise description of what you expected to happen.
    validations:
      required: true
  - type: textarea
    id: steps-to-reproduce
    attributes:
      label: Steps to reproduce
      value: |
        1. 
    validations:
      required: true
  - type: input
    id: context
    attributes:
      label: Environment
      description: Please provide any relevant information about your environment (e.g. browser, OS, versions of rust, tool, etc.).
  - type: textarea
    id: logs
    attributes:
      label: Feel free to provide any relevant information
      description: Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.

# SCORING SYSTEM, COMMON TO ALL TEMPLATES
  - type: markdown
    attributes:
      value: |
        #### PRIORIZATION RULES - SCORING SYSTEM
        > [!NOTE]
        > __Priority Formula__ ‚ûß `impact * effort * complexity`
        > __Contribution Formula__ ‚ûß `impact * 0.5 * complexity * (actually merged) effort`
        > Effort being computed this way: `max(additions, deletions)`

        > [!IMPORTANT]
        > **Impact** - *How many users are affected and how severe is the impact? `average(reach, impact)`*
        > I1. Negligible impact | Affects really few users
        > I2. Affects a specific part of the application, but not critical | Affects a small number of users
        > I3. Affects a core part of the application | Affects a large number of users
        > I4. Nothing works | Every user is affected
        >
        > **COMPLEXITY** - *How complex do you think the problem resolution will be? Consider factors such as algorithmic, brainfuck, novelty, experimentation and uncertainty. Do not take lines of code into account*
        > C1. Easy. Use of brain cells is mostly null.
        > C2. Manageable. Will require hours of research / experimentation.
        > C3. Hard. Will require days of research / experimentation, __prior to implementation__.
        > C4. Black Magic level. May require weeks of research / experimentation, __prior to implementation__. May even be unsolvable.
        >
        > **EFFORT** - *Select the estimated number of lines of code `max(additions, deletions)`. Do not take complexity into account.*
        > E1. < 200 LoC | E2. < 750 LoC | E3. < 1k5 LoC | E4. >= 1k5 LoC
  - type: dropdown
    id: impact
    attributes:
      label: Impact
      options:
        - I1
        - I2
        - I3
        - I4
    validations:
      required: true
  - type: dropdown
    id: complexity
    attributes:
      label: Complexity
      options:
        - C1
        - C2
        - C3
        - C4
    validations:
      required: true
  - type: dropdown
    id: effort
    attributes:
      label: Effort
      options:
        - E1
        - E2
        - E3
        - E4
    validations:
      required: true
